"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[361],{2502:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"index","title":"Jazzy Framework","description":"Jazzy is a lightweight, fast, and easy-to-use web framework developed in Java. Inspired by Laravel\'s elegant syntax, Jazzy brings modern, fluent APIs to the Java world with enterprise-level dependency injection capabilities.","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/jazzy-framework/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/canermastan/jazzy-framework/tree/main/jazzy/docs/docs/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started Guide","permalink":"/jazzy-framework/docs/getting-started"},"next":{"title":"JSON Operations","permalink":"/jazzy-framework/docs/json"}}');var r=i(4848),t=i(8453);const a={},o="Jazzy Framework",l={},d=[{value:"Key Features",id:"key-features",level:2},{value:"What&#39;s New in v0.2",id:"whats-new-in-v02",level:2},{value:"Inspiration",id:"inspiration",level:2},{value:"Why Jazzy?",id:"why-jazzy",level:2},{value:"Version",id:"version",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Contents",id:"contents",level:2},{value:"Core Framework",id:"core-framework",level:3},{value:"Dependency Injection (v0.2+)",id:"dependency-injection-v02",level:3},{value:"Migration from 0.1 to 0.2",id:"migration-from-01-to-02",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"jazzy-framework",children:"Jazzy Framework"})}),"\n",(0,r.jsx)(n.p,{children:"Jazzy is a lightweight, fast, and easy-to-use web framework developed in Java. Inspired by Laravel's elegant syntax, Jazzy brings modern, fluent APIs to the Java world with enterprise-level dependency injection capabilities."}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lightweight Architecture"}),": Provides core functionality with minimal dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fluent API"}),": Easy and readable coding with Laravel-like fluent interfaces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Simple Routing"}),": Simple routing mechanism based on HTTP methods"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Request Processing"}),": Easily process request parameters, body, and headers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Response Generation"}),": Create JSON, HTML, and other response types"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"JSON Operations"}),": Easy JSON creation and processing capabilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Powerful validation system with Fluent API"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udd95 Dependency Injection"}),": Spring-like DI system with zero configuration (v0.2+)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udd95 Automatic Component Discovery"}),": No manual setup required"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udd95 Advanced Annotations"}),": @Component, @Named, @Primary, @PostConstruct, @PreDestroy"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udd95 Lifecycle Management"}),": Proper initialization and cleanup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud83c\udd95 Multiple Scopes"}),": Singleton and Prototype bean management"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"whats-new-in-v02",children:"What's New in v0.2"}),"\n",(0,r.jsxs)(n.p,{children:["Jazzy Framework 0.2 introduces a comprehensive ",(0,r.jsx)(n.strong,{children:"dependency injection system"})," that brings enterprise-level capabilities while maintaining the framework's simplicity:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero Configuration DI"}),": Automatic component discovery with no XML or manual setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spring-like Annotations"}),": Familiar annotations for Spring developers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Constructor Injection"}),": Clean, testable dependency injection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Named Injection"}),": Handle multiple implementations with ",(0,r.jsx)(n.code,{children:"@Named"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Primary Bean Selection"}),": Conflict resolution with ",(0,r.jsx)(n.code,{children:"@Primary"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lifecycle Management"}),": ",(0,r.jsx)(n.code,{children:"@PostConstruct"})," and ",(0,r.jsx)(n.code,{children:"@PreDestroy"})," callbacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scope Management"}),": ",(0,r.jsx)(n.code,{children:"@Singleton"})," (default) and ",(0,r.jsx)(n.code,{children:"@Prototype"})," scopes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Framework Integration"}),": DI works seamlessly with routing and controllers"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"inspiration",children:"Inspiration"}),"\n",(0,r.jsxs)(n.p,{children:["Jazzy Framework is inspired by the elegant and user-friendly APIs of the Laravel PHP framework and Spring Boot's powerful dependency injection. Laravel's fluent method calls like ",(0,r.jsx)(n.code,{children:"response()->json()"})," combined with Spring's annotation-driven DI form the core design philosophy of Jazzy."]}),"\n",(0,r.jsx)(n.h2,{id:"why-jazzy",children:"Why Jazzy?"}),"\n",(0,r.jsx)(n.p,{children:"Jazzy provides a modern and clean API for Java web applications with enterprise-ready features. It's simple to use for both beginners and experienced developers and doesn't require detailed configuration. In particular:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Quick Start"}),": Create a working API in minutes with minimal setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Readable Code"}),": Write code that is easy to read and maintain thanks to fluent APIs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enterprise Ready"}),": Dependency injection for scalable, maintainable applications"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Zero Configuration"}),": DI works out of the box with automatic component discovery"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lightweight Structure"}),": Avoid the burden of complex frameworks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Easy Learning"}),": Familiar for those who know Laravel/Spring-like structures, intuitive for those who don't"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version",children:"Version"}),"\n",(0,r.jsxs)(n.p,{children:["Jazzy Framework is currently at version ",(0,r.jsx)(n.strong,{children:"0.2.0"}),". This major release introduces dependency injection capabilities while maintaining full backward compatibility with 0.1.x applications."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsxs)(n.p,{children:["To start working with Jazzy, you can review the ",(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/getting-started",children:"Getting Started Guide"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"contents",children:"Contents"}),"\n",(0,r.jsx)(n.h3,{id:"core-framework",children:"Core Framework"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/getting-started",children:"Getting Started Guide"})," - Installation and basic application"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/routing",children:"Routing"})," - Route definition and usage"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/requests",children:"HTTP Requests"})," - Request class and request processing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/responses",children:"HTTP Responses"})," - Response class and response generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/json",children:"JSON Operations"})," - Creating and processing JSON data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/response_factory",children:"ResponseFactory"})," - Class that simplifies response creation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/validation",children:"Validation"})," - Request validation and error handling"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/examples",children:"Examples"})," - Complete application examples"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"dependency-injection-v02",children:"Dependency Injection (v0.2+)"}),"\n",(0,r.jsxs)(n.ol,{start:"9",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/dependency-injection",children:"Dependency Injection"})," - Comprehensive DI guide"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/jazzy-framework/docs/di-examples",children:"DI Examples"})," - Complete DI examples and patterns"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"migration-from-01-to-02",children:"Migration from 0.1 to 0.2"}),"\n",(0,r.jsxs)(n.p,{children:["Upgrading to 0.2 is ",(0,r.jsx)(n.strong,{children:"seamless"})," - all existing 0.1 code continues to work without modification. The dependency injection system is purely additive:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Existing controllers and services work as before"}),"\n",(0,r.jsxs)(n.li,{children:["Add ",(0,r.jsx)(n.code,{children:"@Component"})," annotations to enable DI for specific classes"]}),"\n",(0,r.jsx)(n.li,{children:"Gradually migrate to DI-based architecture"}),"\n",(0,r.jsx)(n.li,{children:"Mix manual instantiation with DI in the same application"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);