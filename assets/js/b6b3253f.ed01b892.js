"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[446],{5014:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"response_factory","title":"ResponseFactory Class","description":"Jazzy Framework includes a ResponseFactory class inspired by Laravel. This class makes it easier to create JSON responses in a more fluent way. This approach is similar to Laravel\'s response()->json() helper function.","source":"@site/docs/response_factory.md","sourceDirName":".","slug":"/response_factory","permalink":"/jazzy-framework/docs/response_factory","draft":false,"unlisted":false,"editUrl":"https://github.com/canermastan/jazzy-framework/tree/main/jazzy/docs/docs/response_factory.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"HTTP Responses","permalink":"/jazzy-framework/docs/responses"},"next":{"title":"Validation","permalink":"/jazzy-framework/docs/validation"}}');var a=r(4848),t=r(8453);const o={},c="ResponseFactory Class",l={},i=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Available Methods",id:"available-methods",level:2},{value:"json(Object data)",id:"jsonobject-data",level:3},{value:"json(Object... keyValues)",id:"jsonobject-keyvalues",level:3},{value:"success(String message)",id:"successstring-message",level:3},{value:"success(String message, Object data)",id:"successstring-message-object-data",level:3},{value:"Error Responses",id:"error-responses",level:3},{value:"Other Methods",id:"other-methods",level:3},{value:"Comparison with Laravel",id:"comparison-with-laravel",level:2},{value:"Laravel (PHP)",id:"laravel-php",level:3},{value:"Jazzy (Java)",id:"jazzy-java",level:3},{value:"Examples",id:"examples",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"responsefactory-class",children:"ResponseFactory Class"})}),"\n",(0,a.jsxs)(s.p,{children:["Jazzy Framework includes a ",(0,a.jsx)(s.code,{children:"ResponseFactory"})," class inspired by Laravel. This class makes it easier to create JSON responses in a more fluent way. This approach is similar to Laravel's ",(0,a.jsx)(s.code,{children:"response()->json()"})," helper function."]}),"\n",(0,a.jsx)(s.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"ResponseFactory"})," class is accessed through the static ",(0,a.jsx)(s.code,{children:"response()"})," method, which returns a new instance of the factory. From there, you can chain methods to create various types of responses."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'import static jazzyframework.http.ResponseFactory.response;\r\n\r\n// In your controller method\r\npublic Response aMethod(Request request) {\r\n    return response().json("status", "success", "message", "Operation completed");\r\n}\n'})}),"\n",(0,a.jsx)(s.h2,{id:"available-methods",children:"Available Methods"}),"\n",(0,a.jsx)(s.h3,{id:"jsonobject-data",children:"json(Object data)"}),"\n",(0,a.jsx)(s.p,{children:"Creates a JSON response from an object:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'// Using a Map\r\nMap<String, Object> data = new HashMap<>();\r\ndata.put("name", "Ahmet");\r\ndata.put("age", 30);\r\nreturn response().json(data);\r\n\r\n// Using a POJO\r\nUser user = new User();\r\nuser.setName("Ahmet");\r\nuser.setAge(30);\r\nreturn response().json(user);\n'})}),"\n",(0,a.jsx)(s.h3,{id:"jsonobject-keyvalues",children:"json(Object... keyValues)"}),"\n",(0,a.jsx)(s.p,{children:"Creates a JSON response from key-value pairs:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'return response().json(\r\n    "name", "Ahmet",\r\n    "age", 30,\r\n    "roles", Arrays.asList("admin", "user")\r\n);\n'})}),"\n",(0,a.jsx)(s.h3,{id:"successstring-message",children:"success(String message)"}),"\n",(0,a.jsx)(s.p,{children:"Creates a success response with a message:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'return response().success("User created successfully");\n'})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\r\n  "status": "success",\r\n  "message": "User created successfully"\r\n}\n'})}),"\n",(0,a.jsx)(s.h3,{id:"successstring-message-object-data",children:"success(String message, Object data)"}),"\n",(0,a.jsx)(s.p,{children:"Creates a success response with a message and data:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'User user = new User();\r\nuser.setId("123");\r\nuser.setName("Ahmet");\r\nreturn response().success("User created successfully", user);\n'})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\r\n  "status": "success",\r\n  "message": "User created successfully",\r\n  "data": {\r\n    "id": "123",\r\n    "name": "Ahmet"\r\n  }\r\n}\n'})}),"\n",(0,a.jsx)(s.h3,{id:"error-responses",children:"Error Responses"}),"\n",(0,a.jsx)(s.p,{children:"For error responses, you can create a JSON response:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'return response().json(\r\n    "status", "error",\r\n    "message", "User not found"\r\n).status(404);\n'})}),"\n",(0,a.jsx)(s.p,{children:"Output:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-json",children:'{\r\n  "status": "error",\r\n  "message": "User not found"\r\n}\n'})}),"\n",(0,a.jsx)(s.p,{children:"For validation errors:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'return response().json(\r\n    "status", "error",\r\n    "message", "Validation error",\r\n    "errors", validationErrors\r\n).status(400);\n'})}),"\n",(0,a.jsx)(s.h3,{id:"other-methods",children:"Other Methods"}),"\n",(0,a.jsx)(s.p,{children:"The factory also includes methods for other response types:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'// Text response\r\nreturn response().text("Plain text content");\r\n\r\n// HTML response\r\nreturn response().html("<h1>Hello World</h1>");\r\n\r\n// Redirect\r\nreturn response().redirect("/another-url");\n'})}),"\n",(0,a.jsx)(s.h2,{id:"comparison-with-laravel",children:"Comparison with Laravel"}),"\n",(0,a.jsx)(s.p,{children:"How to do the same thing with Laravel (PHP) and Jazzy (Java):"}),"\n",(0,a.jsx)(s.h3,{id:"laravel-php",children:"Laravel (PHP)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-php",children:"// Basic JSON response\r\nreturn response()->json([\r\n    'status' => 'success',\r\n    'message' => 'Operation successful'\r\n]);\r\n\r\n// Returning an Eloquent model\r\n$user = User::find(1);\r\nreturn response()->json($user);\n"})}),"\n",(0,a.jsx)(s.h3,{id:"jazzy-java",children:"Jazzy (Java)"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'// Basic JSON response\r\nreturn response().json(\r\n    "status", "success",\r\n    "message", "Operation successful"\r\n);\r\n\r\n// Returning a model/POJO\r\nUser user = userRepository.findById("1");\r\nreturn response().json(user);\n'})}),"\n",(0,a.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(s.p,{children:"You can see how to use ResponseFactory in the following examples:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-java",children:'// Basic JSON response\r\npublic Response example1(Request request) {\r\n    return response().json(\r\n        "id", 1,\r\n        "name", "Hello",\r\n        "active", true\r\n    );\r\n}\r\n\r\n// Success response\r\npublic Response example2(Request request) {\r\n    return response().success("Operation successful");\r\n}\r\n\r\n// Veri i\xe7eren ba\u015far\u0131 yan\u0131t\u0131\r\npublic Response example3(Request request) {\r\n    Map<String, Object> userData = new HashMap<>();\r\n    userData.put("id", 123);\r\n    userData.put("name", "Ahmet");\r\n    \r\n    return response().success("Kullan\u0131c\u0131 olu\u015fturuldu", userData);\r\n}\r\n\r\n// Hata yan\u0131t\u0131\r\npublic Response example4(Request request) {\r\n    return response().json(\r\n        "status", "error",\r\n        "message", "Kaynak bulunamad\u0131"\r\n    ).status(404);\r\n}\r\n\r\n// Kompleks yan\u0131t\r\npublic Response example5(Request request) {\r\n    return response().json(\r\n        "users", JSON.array(\r\n            JSON.of("id", 1, "name", "Ahmet"),\r\n            JSON.of("id", 2, "name", "Mehmet"),\r\n            JSON.of("id",\r\n            3, "name", "Ay\u015fe")\r\n        ),\r\n        "total", 3,\r\n        "page", 1\r\n    );\r\n} \n'})})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>c});var n=r(6540);const a={},t=n.createContext(a);function o(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);