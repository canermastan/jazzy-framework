"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[361],{2502:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"index","title":"Jazzy Framework","description":"Jazzy is a lightweight, fast, and easy-to-use web framework developed in Java. Inspired by Laravel\'s elegant syntax, Jazzy brings modern, fluent APIs to the Java world with enterprise-level dependency injection capabilities and comprehensive database integration.","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/jazzy-framework/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/canermastan/jazzy-framework/tree/main/jazzy/docs/docs/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Getting Started Guide","permalink":"/jazzy-framework/docs/getting-started"}}');var i=n(4848),t=n(8453);const a={},o="Jazzy Framework",l={},d=[{value:"\ud83d\ude80 What&#39;s New in v0.3.0",id:"-whats-new-in-v030",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"1. Add Dependency",id:"1-add-dependency",level:3},{value:"2. Create Your First Application",id:"2-create-your-first-application",level:3},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"Why Choose Jazzy?",id:"why-choose-jazzy",level:2},{value:"\ud83d\ude80 <strong>Developer Productivity</strong>",id:"-developer-productivity",level:3},{value:"\ud83c\udfd7\ufe0f <strong>Enterprise Ready</strong>",id:"\ufe0f-enterprise-ready",level:3},{value:"\ud83d\udd27 <strong>Modern Java Development</strong>",id:"-modern-java-development",level:3},{value:"\ud83d\udcc8 <strong>Performance Focused</strong>",id:"-performance-focused",level:3},{value:"Learning Path",id:"learning-path",level:2},{value:"\ud83c\udf31 <strong>Beginner</strong>",id:"-beginner",level:3},{value:"\ud83c\udf3f <strong>Intermediate</strong>",id:"-intermediate",level:3},{value:"\ud83c\udf33 <strong>Advanced</strong>",id:"-advanced",level:3},{value:"Community &amp; Support",id:"community--support",level:2},{value:"Version History",id:"version-history",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"jazzy-framework",children:"Jazzy Framework"})}),"\n",(0,i.jsx)(r.p,{children:"Jazzy is a lightweight, fast, and easy-to-use web framework developed in Java. Inspired by Laravel's elegant syntax, Jazzy brings modern, fluent APIs to the Java world with enterprise-level dependency injection capabilities and comprehensive database integration."}),"\n",(0,i.jsx)(r.h2,{id:"-whats-new-in-v030",children:"\ud83d\ude80 What's New in v0.3.0"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Major Database Integration Update!"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\ud83d\uddc4\ufe0f ",(0,i.jsx)(r.strong,{children:"Full Database Integration"}),": Hibernate/JPA support with zero configuration"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udd0d ",(0,i.jsx)(r.strong,{children:"Spring Data JPA-like Repositories"}),": Automatic query generation from method names"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udcdd ",(0,i.jsx)(r.strong,{children:"Custom Query Support"}),": @Query annotation for HQL/JPQL and native SQL"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udd04 ",(0,i.jsx)(r.strong,{children:"Transaction Management"}),": Automatic transaction handling with proper rollback"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83c\udfd7\ufe0f ",(0,i.jsx)(r.strong,{children:"Entity Discovery"}),": Automatic entity scanning and configuration"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udcca ",(0,i.jsx)(r.strong,{children:"Connection Pooling"}),": HikariCP for production-ready database connections"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"key-features",children:"Key Features"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Lightweight Architecture"}),": Provides core functionality with minimal dependencies"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Fluent API"}),": Easy and readable coding with Laravel-like fluent interfaces"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Request Processing"}),": Easily process request parameters, body, and headers"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Response Generation"}),": Create JSON, HTML, and other response types"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"JSON Operations"}),": Easy JSON creation and processing capabilities"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Validation System"}),": Built-in request validation with custom rules"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Dependency Injection"}),": Enterprise-level DI container with automatic component scanning"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Database Integration"}),": Full ORM support with Spring Data JPA-like repositories"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Entity Management"}),": Automatic entity discovery and configuration"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Query Generation"}),": Automatic query generation from method names"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Custom Queries"}),": Support for complex HQL/JPQL and native SQL queries"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Transaction Management"}),": Automatic transaction handling"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Connection Pooling"}),": Production-ready database connection management"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(r.h3,{id:"1-add-dependency",children:"1. Add Dependency"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-xml",children:"<dependency>\r\n    <groupId>com.jazzyframework</groupId>\r\n    <artifactId>jazzy-framework</artifactId>\r\n    <version>0.3.0</version>\r\n</dependency>\n"})}),"\n",(0,i.jsx)(r.h3,{id:"2-create-your-first-application",children:"2. Create Your First Application"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'import jazzyframework.core.Config;\r\nimport jazzyframework.core.Server;\r\nimport jazzyframework.routing.Router;\r\nimport jazzyframework.http.Request;\r\nimport jazzyframework.http.Response;\r\nimport jazzyframework.http.JSON;\r\nimport jazzyframework.di.annotations.Component;\r\n\r\npublic class MyApp {\r\n    public static void main(String[] args) {\r\n        Config config = new Config();\r\n        config.setEnableMetrics(true);  // Enables "/metrics" endpoint automatically\r\n        config.setServerPort(8080);\r\n        \r\n        Router router = new Router();\r\n        \r\n        // Controller-based routes with dependency injection\r\n        router.GET("/users", "getAllUsers", UserController.class);\r\n        router.GET("/users/{id}", "getUserById", UserController.class);\r\n        router.POST("/users", "createUser", UserController.class);\r\n        router.PUT("/users/{id}", "updateUser", UserController.class);\r\n        router.DELETE("/users/{id}", "deleteUser", UserController.class);\r\n        \r\n        Server server = new Server(router, config);\r\n        server.start(config.getServerPort());\r\n    }\r\n}\r\n\r\n// Example Controller with Dependency Injection\r\n@Component\r\npublic class UserController {\r\n    private final UserService userService;\r\n    \r\n    public UserController(UserService userService) {\r\n        this.userService = userService;\r\n    }\r\n    \r\n    public Response getAllUsers(Request request) {\r\n        List<User> users = userService.findAllUsers();\r\n        return Response.json(JSON.of(\r\n            "users", users, \r\n            "count", users.size()\r\n            ));\r\n    }\r\n    \r\n    public Response createUser(Request request) {\r\n        User user = request.toObject(User.class);\r\n        User createdUser = userService.createUser(user.getName(), user.getEmail());\r\n        return Response.json(JSON.of("user", createdUser)).status(201);\r\n    }\r\n\r\n    public Response getUserById(Request request) {\r\n        Long id = Long.parseLong(request.path("id"));\r\n        Optional<User> user = userService.findById(id);\r\n        \r\n        if (user.isPresent()) {\r\n            return Response.json(JSON.of("user", user.get()));\r\n        }\r\n        return Response.json(JSON.of("error", "User not found")).status(404);\r\n    }\r\n    \r\n    public Response updateUser(Request request) {\r\n        Long id = Long.parseLong(request.path("id"));\r\n        User user = request.toObject(User.class);\r\n        User updatedUser = userService.updateUser(id, user);\r\n        return Response.json(JSON.of("user", updatedUser));\r\n    }\r\n    \r\n    public Response deleteUser(Request request) {\r\n        Long id = Long.parseLong(request.path("id"));\r\n        userService.deleteUser(id);\r\n        return Response.json(JSON.of("message", "User deleted successfully"));\r\n    }\r\n}\r\n\r\n### 3. Database Integration (NEW!)\r\n\r\n**Configure Database:**\r\n```properties\r\n# application.properties\r\njazzy.datasource.url=jdbc:h2:mem:testdb\r\njazzy.datasource.username=sa\r\njazzy.datasource.password=\r\njazzy.jpa.hibernate.ddl-auto=create-drop\n'})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Create Entity:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:"@Entity\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n    private Long id;\r\n    \r\n    @Column(unique = true)\r\n    private String email;\r\n    private String name;\r\n    \r\n    // constructors, getters, setters...\r\n}\n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Create Repository:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'public interface UserRepository extends BaseRepository<User, Long> {\r\n    Optional<User> findByEmail(String email);\r\n    List<User> findByActive(boolean active);\r\n    \r\n    @Query("SELECT u FROM User u WHERE u.name LIKE %:name%")\r\n    List<User> searchByName(String name);\r\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.strong,{children:"Use in Service:"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:"@Component\r\npublic class UserService {\r\n    private final UserRepository userRepository;\r\n    \r\n    public UserService(UserRepository userRepository) {\r\n        this.userRepository = userRepository;\r\n    }\r\n    \r\n    public User createUser(String name, String email) {\r\n        User user = new User(name, email);\r\n        return userRepository.save(user);\r\n    }\r\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,i.jsx)(r.p,{children:"Jazzy Framework follows a clean, modular architecture:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                    Jazzy Framework                          \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502  \ud83c\udf10 HTTP Layer                                              \u2502\r\n\u2502  \u251c\u2500\u2500 Routing & Request Handling                             \u2502\r\n\u2502  \u251c\u2500\u2500 Response Generation                                     \u2502\r\n\u2502  \u2514\u2500\u2500 Validation System                                      \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502  \ud83d\udd27 Dependency Injection                                    \u2502\r\n\u2502  \u251c\u2500\u2500 Component Scanning                                     \u2502\r\n\u2502  \u251c\u2500\u2500 Automatic Wiring                                       \u2502\r\n\u2502  \u2514\u2500\u2500 Lifecycle Management                                   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502  \ud83d\uddc4\ufe0f Database Integration (NEW in 0.3.0)                    \u2502\r\n\u2502  \u251c\u2500\u2500 Entity Management                                      \u2502\r\n\u2502  \u251c\u2500\u2500 Repository Pattern                                     \u2502\r\n\u2502  \u251c\u2500\u2500 Query Generation                                       \u2502\r\n\u2502  \u2514\u2500\u2500 Transaction Management                                 \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502  \ud83d\udee0\ufe0f Utilities                                               \u2502\r\n\u2502  \u251c\u2500\u2500 JSON Processing                                        \u2502\r\n\u2502  \u251c\u2500\u2500 Configuration Management                               \u2502\r\n\u2502  \u2514\u2500\u2500 Logging & Metrics                                      \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,i.jsx)(r.h2,{id:"why-choose-jazzy",children:"Why Choose Jazzy?"}),"\n",(0,i.jsxs)(r.h3,{id:"-developer-productivity",children:["\ud83d\ude80 ",(0,i.jsx)(r.strong,{children:"Developer Productivity"})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Minimal boilerplate code"}),"\n",(0,i.jsx)(r.li,{children:"Intuitive, Laravel-inspired API"}),"\n",(0,i.jsx)(r.li,{children:"Automatic dependency injection"}),"\n",(0,i.jsx)(r.li,{children:"Zero-configuration database setup"}),"\n"]}),"\n",(0,i.jsxs)(r.h3,{id:"\ufe0f-enterprise-ready",children:["\ud83c\udfd7\ufe0f ",(0,i.jsx)(r.strong,{children:"Enterprise Ready"})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Production-ready dependency injection"}),"\n",(0,i.jsx)(r.li,{children:"Comprehensive database integration"}),"\n",(0,i.jsx)(r.li,{children:"Automatic transaction management"}),"\n",(0,i.jsx)(r.li,{children:"Connection pooling with HikariCP"}),"\n"]}),"\n",(0,i.jsxs)(r.h3,{id:"-modern-java-development",children:["\ud83d\udd27 ",(0,i.jsx)(r.strong,{children:"Modern Java Development"})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Clean, readable code patterns"}),"\n",(0,i.jsx)(r.li,{children:"Type-safe repository interfaces"}),"\n",(0,i.jsx)(r.li,{children:"Automatic query generation"}),"\n",(0,i.jsx)(r.li,{children:"Support for modern Java features"}),"\n"]}),"\n",(0,i.jsxs)(r.h3,{id:"-performance-focused",children:["\ud83d\udcc8 ",(0,i.jsx)(r.strong,{children:"Performance Focused"})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Lightweight core with minimal overhead"}),"\n",(0,i.jsx)(r.li,{children:"Efficient database operations"}),"\n",(0,i.jsx)(r.li,{children:"Optimized connection pooling"}),"\n",(0,i.jsx)(r.li,{children:"Database-level query optimization"}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"learning-path",children:"Learning Path"}),"\n",(0,i.jsxs)(r.h3,{id:"-beginner",children:["\ud83c\udf31 ",(0,i.jsx)(r.strong,{children:"Beginner"})]}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/getting-started",children:"Getting Started"})," - Set up your first Jazzy application"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/routing",children:"Routing"})," - Learn URL routing and HTTP methods"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/requests",children:"Requests & Responses"})," - Handle HTTP requests and responses"]}),"\n"]}),"\n",(0,i.jsxs)(r.h3,{id:"-intermediate",children:["\ud83c\udf3f ",(0,i.jsx)(r.strong,{children:"Intermediate"})]}),"\n",(0,i.jsxs)(r.ol,{start:"4",children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/dependency-injection",children:"Dependency Injection"})," - Master the DI container"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/database-integration",children:"Database Integration"})," - Set up database connectivity"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/repositories",children:"Repository Pattern"})," - Create data access layers"]}),"\n"]}),"\n",(0,i.jsxs)(r.h3,{id:"-advanced",children:["\ud83c\udf33 ",(0,i.jsx)(r.strong,{children:"Advanced"})]}),"\n",(0,i.jsxs)(r.ol,{start:"7",children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/query-methods",children:"Query Methods"})," - Advanced database querying"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/validation",children:"Validation"})," - Request validation and error handling"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/examples",children:"Examples"})," - Real-world application examples"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"community--support",children:"Community & Support"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"GitHub"}),": ",(0,i.jsx)(r.a,{href:"https://github.com/canermastan/jazzy-framework",children:"JazzyFramework Repository"})]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Documentation"}),": Complete guides and API reference"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Examples"}),": Working code samples and tutorials"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Issues"}),": Bug reports and feature requests"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"version-history",children:"Version History"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"v0.3.0"})," (Current) - Database Integration & ORM Support"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"v0.2.0"})," - Dependency Injection & Component System"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"v0.1.0"})," - Core HTTP Framework & Routing"]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsxs)(r.p,{children:["Ready to build amazing applications with Jazzy? Start with our ",(0,i.jsx)(r.a,{href:"/jazzy-framework/docs/getting-started",children:"Getting Started Guide"}),"!"]})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>o});var s=n(6540);const i={},t=s.createContext(i);function a(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);