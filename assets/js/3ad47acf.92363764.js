"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[40],{1408:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"json","title":"JSON Operations","description":"Jazzy provides easy creation and processing of JSON data format for modern web APIs. This document details the framework\'s JSON processing capabilities.","source":"@site/docs/json.md","sourceDirName":".","slug":"/json","permalink":"/jazzy-framework/docs/json","draft":false,"unlisted":false,"editUrl":"https://github.com/canermastan/jazzy-framework/tree/main/jazzy/docs/docs/json.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Jazzy Framework","permalink":"/jazzy-framework/docs/"},"next":{"title":"HTTP Requests","permalink":"/jazzy-framework/docs/requests"}}');var t=n(4848),a=n(8453);const o={},i="JSON Operations",d={},c=[{value:"Creating JSON Data",id:"creating-json-data",level:2},{value:"Creating JSON with ResponseFactory",id:"creating-json-with-responsefactory",level:3},{value:"Objects with the JSON Class",id:"objects-with-the-json-class",level:3},{value:"JSON Creation Methods",id:"json-creation-methods",level:3},{value:"1. of() Method",id:"1-of-method",level:4},{value:"2. create() and add() Method",id:"2-create-and-add-method",level:4},{value:"3. array() Method",id:"3-array-method",level:4},{value:"Complex JSON Structures",id:"complex-json-structures",level:2},{value:"Nested JSON Objects",id:"nested-json-objects",level:3},{value:"Arrays and Complex Structures",id:"arrays-and-complex-structures",level:3},{value:"JSON Object Methods",id:"json-object-methods",level:2},{value:"toMap()",id:"tomap",level:3},{value:"toString()",id:"tostring",level:3},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"HTTP Responses",id:"http-responses",level:3},{value:"Data Filtering",id:"data-filtering",level:3},{value:"Special Cases About JSON",id:"special-cases-about-json",level:2},{value:"Requirements of the JSON.of() Method",id:"requirements-of-the-jsonof-method",level:3},{value:"Example: A Comprehensive API Response",id:"example-a-comprehensive-api-response",level:2},{value:"Next Steps",id:"next-steps",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"json-operations",children:"JSON Operations"})}),"\n",(0,t.jsx)(r.p,{children:"Jazzy provides easy creation and processing of JSON data format for modern web APIs. This document details the framework's JSON processing capabilities."}),"\n",(0,t.jsx)(r.h2,{id:"creating-json-data",children:"Creating JSON Data"}),"\n",(0,t.jsx)(r.p,{children:"Jazzy offers various methods for creating JSON data:"}),"\n",(0,t.jsx)(r.h3,{id:"creating-json-with-responsefactory",children:"Creating JSON with ResponseFactory"}),"\n",(0,t.jsx)(r.p,{children:"The ResponseFactory class allows you to create JSON using key-value pairs:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import static jazzyframework.http.ResponseFactory.response;\r\n\r\npublic Response getUserData(Request request) {\r\n    return response().json(\r\n        "id", "123",\r\n        "name", "Mehmet Kaya",\r\n        "email", "mehmet@example.com",\r\n        "active", true,\r\n        "age", 35,\r\n        "score", 95.8\r\n    );\r\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"This method is ideal for simple JSON objects and is easy to read."}),"\n",(0,t.jsx)(r.h3,{id:"objects-with-the-json-class",children:"Objects with the JSON Class"}),"\n",(0,t.jsxs)(r.p,{children:["For more complex JSON structures or when you want to use JSON data outside of ResponseFactory, you can use the ",(0,t.jsx)(r.code,{children:"JSON"})," class:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import static jazzyframework.http.JSON.of;\r\nimport static jazzyframework.http.JSON.array;\r\nimport jazzyframework.http.JSON;\r\n\r\n// Creating with JSON.of method\r\nJSON userData = JSON.of(\r\n    "id", "123",\r\n    "name", "Mehmet Kaya",\r\n    "email", "mehmet@example.com",\r\n    "active", true\r\n);\r\n\r\n// Sending as a response\r\nreturn response().json(userData);\n'})}),"\n",(0,t.jsx)(r.h3,{id:"json-creation-methods",children:"JSON Creation Methods"}),"\n",(0,t.jsx)(r.p,{children:"The JSON class provides several methods for creating various JSON structures:"}),"\n",(0,t.jsx)(r.h4,{id:"1-of-method",children:"1. of() Method"}),"\n",(0,t.jsx)(r.p,{children:"Creates a JSON object from key-value pairs:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import static jazzyframework.http.JSON.of;\r\n\r\nJSON user = of(\r\n    "id", "123",\r\n    "name", "Ay\u015fe Demir",\r\n    "email", "ayse@example.com"\r\n);\n'})}),"\n",(0,t.jsx)(r.h4,{id:"2-create-and-add-method",children:"2. create() and add() Method"}),"\n",(0,t.jsx)(r.p,{children:"For step-by-step JSON object creation:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'JSON user = JSON.create()\r\n    .add("id", "456")\r\n    .add("name", "Ali Y\u0131lmaz")\r\n    .add("email", "ali@example.com")\r\n    .add("active", true)\r\n    .add("age", 29);\n'})}),"\n",(0,t.jsx)(r.h4,{id:"3-array-method",children:"3. array() Method"}),"\n",(0,t.jsx)(r.p,{children:"For creating JSON arrays:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import static jazzyframework.http.JSON.array;\r\n\r\n// Creating an array\r\nList<Object> colors = array("red", "blue", "green", "yellow");\r\n\r\n// Adding the array to a JSON object\r\nJSON data = JSON.of("colors", colors);\n'})}),"\n",(0,t.jsx)(r.h2,{id:"complex-json-structures",children:"Complex JSON Structures"}),"\n",(0,t.jsx)(r.h3,{id:"nested-json-objects",children:"Nested JSON Objects"}),"\n",(0,t.jsx)(r.p,{children:"The JSON class supports creating nested JSON objects:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// Creating nested objects\r\nJSON address = JSON.of(\r\n    "street", "Atat\xfcrk Street No:123",\r\n    "city", "Istanbul",\r\n    "country", "Turkey",\r\n    "postalCode", "34000"\r\n);\r\n\r\nJSON user = JSON.of(\r\n    "id", "789",\r\n    "name", "Zeynep Kara",\r\n    "email", "zeynep@example.com",\r\n    "address", address\r\n);\r\n\r\n// Response containing nested object\r\nreturn response().json(user);\n'})}),"\n",(0,t.jsx)(r.h3,{id:"arrays-and-complex-structures",children:"Arrays and Complex Structures"}),"\n",(0,t.jsx)(r.p,{children:"For more complex structures, you can combine arrays and objects:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// User with multiple addresses\r\nJSON homeAddress = JSON.of(\r\n    "type", "home",\r\n    "street", "Ba\u011fdat Street No:45",\r\n    "city", "Istanbul"\r\n);\r\n\r\nJSON workAddress = JSON.of(\r\n    "type", "work",\r\n    "street", "Levent Plaza No:12",\r\n    "city", "Istanbul"\r\n);\r\n\r\n// Array of addresses\r\nList<Object> addresses = JSON.array(homeAddress, workAddress);\r\n\r\n// Array of phone numbers\r\nList<Object> phoneNumbers = JSON.array(\r\n    JSON.of("type", "mobile", "number", "+90555123456"),\r\n    JSON.of("type", "work", "number", "+90212987654")\r\n);\r\n\r\n// Main user object\r\nJSON user = JSON.of(\r\n    "id", "101",\r\n    "name", "Mustafa \xc7elik",\r\n    "addresses", addresses,\r\n    "phoneNumbers", phoneNumbers,\r\n    "tags", JSON.array("premium", "verified", "customer")\r\n);\n'})}),"\n",(0,t.jsx)(r.h2,{id:"json-object-methods",children:"JSON Object Methods"}),"\n",(0,t.jsx)(r.h3,{id:"tomap",children:"toMap()"}),"\n",(0,t.jsx)(r.p,{children:"Converts a JSON object to a standard Java Map:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'JSON user = JSON.of("name", "Deniz", "age", 27);\r\nMap<String, Object> map = user.toMap();\n'})}),"\n",(0,t.jsx)(r.h3,{id:"tostring",children:"toString()"}),"\n",(0,t.jsx)(r.p,{children:"Returns the string representation of the JSON object (useful for debugging):"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'JSON user = JSON.of("name", "Deniz", "age", 27);\r\nString str = user.toString();\r\nSystem.out.println(str);  // {name=Deniz, age=27}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,t.jsx)(r.h3,{id:"http-responses",children:"HTTP Responses"}),"\n",(0,t.jsx)(r.p,{children:"JSON is commonly used especially in HTTP responses:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// Success response\r\nreturn response().json(\r\n    "status", "success",\r\n    "message", "Operation completed successfully",\r\n    "data", user\r\n);\r\n\r\n// Error response\r\nreturn response().json(\r\n    "status", "error",\r\n    "message", "User not found",\r\n    "code", "USER_NOT_FOUND"\r\n).status(404);\r\n\r\n// Validation error\r\nreturn response().json(\r\n    "status", "error",\r\n    "message", "Validation error",\r\n    "errors", validationErrors\r\n).status(400);\n'})}),"\n",(0,t.jsx)(r.h3,{id:"data-filtering",children:"Data Filtering"}),"\n",(0,t.jsx)(r.p,{children:"You can select only the necessary fields when creating JSON data:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'public Response getUserProfile(Request request) {\r\n    User user = findUser(request.path("id"));\r\n    \r\n    // Filtering sensitive information\r\n    return response().json(\r\n        "id", user.getId(),\r\n        "name", user.getName(),\r\n        "email", user.getEmail(),\r\n        "joinDate", user.getJoinDate()\r\n        // sensitive fields like password, securityQuestion are not included\r\n    );\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"special-cases-about-json",children:"Special Cases About JSON"}),"\n",(0,t.jsx)(r.h3,{id:"requirements-of-the-jsonof-method",children:"Requirements of the JSON.of() Method"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Must be in key-value pairs (even number of arguments)"}),"\n",(0,t.jsx)(r.li,{children:"All keys must be of String type"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// Correct usage\r\nJSON.of("key1", value1, "key2", value2);\r\n\r\n// Incorrect: odd number of arguments\r\nJSON.of("key1", value1, "key2");  // Throws IllegalArgumentException\r\n\r\n// Incorrect: non-string key\r\nJSON.of(123, value1);  // Throws IllegalArgumentException\n'})}),"\n",(0,t.jsx)(r.h2,{id:"example-a-comprehensive-api-response",children:"Example: A Comprehensive API Response"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'public Response getProductDetails(Request request) {\r\n    String productId = request.path("id");\r\n    \r\n    // Get product information from database (for example)\r\n    Product product = findProduct(productId);\r\n    \r\n    if (product == null) {\r\n        return response().json(\r\n            "status", "error", \r\n            "message", "Product not found"\r\n        ).status(404);\r\n    }\r\n    \r\n    // Category information\r\n    JSON category = JSON.of(\r\n        "id", product.getCategoryId(),\r\n        "name", product.getCategoryName(),\r\n        "path", product.getCategoryPath()\r\n    );\r\n    \r\n    // Pricing information\r\n    JSON pricing = JSON.of(\r\n        "base", product.getBasePrice(),\r\n        "discount", product.getDiscountAmount(),\r\n        "final", product.getFinalPrice(),\r\n        "currency", "TRY",\r\n        "onSale", product.isOnSale()\r\n    );\r\n    \r\n    // Images\r\n    List<String> imageUrls = product.getImageUrls();\r\n    \r\n    // Variants\r\n    List<Object> variants = new ArrayList<>();\r\n    for (Variant variant : product.getVariants()) {\r\n        variants.add(JSON.of(\r\n            "id", variant.getId(),\r\n            "name", variant.getName(),\r\n            "stock", variant.getStock(),\r\n            "attributes", JSON.of(\r\n                "color", variant.getColor(),\r\n                "size", variant.getSize()\r\n            )\r\n        ));\r\n    }\r\n    \r\n    // Main response\r\n    return response().json(\r\n        "id", product.getId(),\r\n        "name", product.getName(),\r\n        "description", product.getDescription(),\r\n        "category", category,\r\n        "pricing", pricing,\r\n        "images", imageUrls,\r\n        "variants", variants,\r\n        "rating", product.getRating(),\r\n        "reviewCount", product.getReviewCount(),\r\n        "inStock", product.isInStock(),\r\n        "createdAt", product.getCreatedAt(),\r\n        "updatedAt", product.getUpdatedAt()\r\n    );\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["See the ",(0,t.jsx)(r.a,{href:"/jazzy-framework/docs/requests",children:"HTTP Requests"})," document for receiving and processing JSON request data"]}),"\n",(0,t.jsxs)(r.li,{children:["Explore the ",(0,t.jsx)(r.a,{href:"/jazzy-framework/docs/responses",children:"HTTP Responses"})," document for creating JSON responses"]}),"\n",(0,t.jsxs)(r.li,{children:["Check out the ",(0,t.jsx)(r.a,{href:"/jazzy-framework/docs/examples",children:"Examples"})," document for sample applications"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var s=n(6540);const t={},a=s.createContext(t);function o(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);