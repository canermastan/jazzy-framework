"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[831],{3341:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"authentication","title":"Authentication & Security","description":"Jazzy Framework provides a comprehensive authentication and security system with JWT tokens, role-based access control, and declarative security configuration. The security system is designed to be both powerful and easy to use, requiring minimal configuration while providing enterprise-grade security features.","source":"@site/docs/authentication.md","sourceDirName":".","slug":"/authentication","permalink":"/jazzy-framework/docs/authentication","draft":false,"unlisted":false,"editUrl":"https://github.com/canermastan/jazzy-framework/tree/main/jazzy/docs/docs/authentication.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started Guide","permalink":"/jazzy-framework/docs/getting-started"},"next":{"title":"\ud83d\ude80 CRUD Operations","permalink":"/jazzy-framework/docs/crud"}}');var s=i(4848),t=i(8453);const o={sidebar_position:4},a="Authentication & Security",l={},c=[{value:"Quick Start",id:"quick-start",level:2},{value:"User Entity Requirements",id:"user-entity-requirements",level:2},{value:"Field Requirements by Login Method",id:"field-requirements-by-login-method",level:3},{value:"Security Configuration",id:"security-configuration",level:2},{value:"Wildcard Pattern Support",id:"wildcard-pattern-support",level:3},{value:"Authentication Endpoints",id:"authentication-endpoints",level:2},{value:"POST /api/auth/register",id:"post-apiauthregister",level:3},{value:"POST /api/auth/login",id:"post-apiauthlogin",level:3},{value:"GET /api/auth/me",id:"get-apiauthme",level:3},{value:"JWT Token Usage",id:"jwt-token-usage",level:2},{value:"Client-Side Usage",id:"client-side-usage",level:3},{value:"Token Structure",id:"token-structure",level:3},{value:"Role-Based Access Control",id:"role-based-access-control",level:2},{value:"Built-in Roles",id:"built-in-roles",level:3},{value:"Custom Roles",id:"custom-roles",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Custom JWT Configuration",id:"custom-jwt-configuration",level:3},{value:"Multiple Login Methods",id:"multiple-login-methods",level:3},{value:"Password Security",id:"password-security",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Authentication Errors",id:"authentication-errors",level:3},{value:"Registration Errors",id:"registration-errors",level:3},{value:"Login Errors",id:"login-errors",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"With Auto-CRUD System",id:"with-auto-crud-system",level:3},{value:"Custom Security Logic",id:"custom-security-logic",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Security",id:"security",level:3},{value:"Architecture",id:"architecture",level:3},{value:"Development",id:"development",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"From No Authentication (v0.4 and earlier)",id:"from-no-authentication-v04-and-earlier",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debugging Tips",id:"debugging-tips",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"authentication--security",children:"Authentication & Security"})}),"\n",(0,s.jsx)(n.p,{children:"Jazzy Framework provides a comprehensive authentication and security system with JWT tokens, role-based access control, and declarative security configuration. The security system is designed to be both powerful and easy to use, requiring minimal configuration while providing enterprise-grade security features."}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(n.p,{children:["The easiest way to add authentication to your Jazzy application is with the ",(0,s.jsx)(n.code,{children:"@EnableJazzyAuth"})," annotation:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@EnableJazzyAuth(\n    userClass = User.class,\n    repositoryClass = UserRepository.class,\n    loginMethod = LoginMethod.EMAIL,\n    jwtSecret = "your-secret-key",\n    jwtExpirationHours = 24,\n    authBasePath = "/api/auth"\n)\npublic class MyApp {\n    public static void main(String[] args) {\n        Config config = new Config();\n        Router router = new Router();\n        \n        Server server = new Server(router, config);\n        server.start(8080);\n        \n        // Automatically provides:\n        // POST /api/auth/register - User registration\n        // POST /api/auth/login    - User login  \n        // GET  /api/auth/me       - Current user info\n    }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"This single annotation automatically:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 Creates authentication endpoints (",(0,s.jsx)(n.code,{children:"/register"}),", ",(0,s.jsx)(n.code,{children:"/login"}),", ",(0,s.jsx)(n.code,{children:"/me"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Configures JWT token generation and validation"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Sets up security interceptors for protected routes"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Integrates with your user entity and repository"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Provides role-based access control"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"user-entity-requirements",children:"User Entity Requirements"}),"\n",(0,s.jsx)(n.p,{children:"Your user entity must have specific fields for authentication to work:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Entity\n@Table(name = "users")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    \n    // Required for EMAIL login\n    @Column(unique = true)\n    private String email;\n    \n    // Required for USERNAME login  \n    @Column(unique = true)\n    private String username;\n    \n    // Required - will be hashed automatically\n    private String password;\n    \n    // Optional - defaults to "USER" \n    private String role = "USER";\n    \n    // Optional fields\n    private String firstName;\n    private String lastName;\n    private boolean active = true;\n    \n    // getters and setters...\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"field-requirements-by-login-method",children:"Field Requirements by Login Method"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Login Method"}),(0,s.jsx)(n.th,{children:"Required Fields"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LoginMethod.EMAIL"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"email"}),", ",(0,s.jsx)(n.code,{children:"password"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LoginMethod.USERNAME"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"username"}),", ",(0,s.jsx)(n.code,{children:"password"})]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"security-configuration",children:"Security Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"SecurityConfig"})," to define URL-based security rules:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Component\npublic class AppSecurityConfig extends SecurityConfig {\n    \n    @Override\n    public void configure() {\n        // Public endpoints (no authentication required)\n        publicEndpoints(\n            "/",                    // Home page\n            "/api/auth/**",         // Authentication endpoints\n            "/api/public/**",       // Public API\n            "/health"               // Health check\n        );\n        \n        // Secure endpoints (JWT authentication required)\n        requireAuth(\n            "/api/user/**",         // User-specific endpoints\n            "/api/protected",       // Protected resources\n            "/api/data/**"          // Data endpoints\n        );\n        \n        // Admin endpoints (JWT + ADMIN role required)\n        requireRole("ADMIN", \n            "/api/admin/**",        // Admin panel\n            "/api/users/manage",    // User management\n            "/api/system/**"        // System administration\n        );\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"wildcard-pattern-support",children:"Wildcard Pattern Support"}),"\n",(0,s.jsx)(n.p,{children:"Security rules support powerful wildcard patterns:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pattern"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Examples"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/path/*"})}),(0,s.jsx)(n.td,{children:"Matches single level"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"/api/users/123"})," \u2705",(0,s.jsx)("br",{}),(0,s.jsx)(n.code,{children:"/api/users/123/profile"})," \u274c"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/path/**"})}),(0,s.jsx)(n.td,{children:"Matches all levels"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"/api/users/123"})," \u2705",(0,s.jsx)("br",{}),(0,s.jsx)(n.code,{children:"/api/users/123/profile"})," \u2705"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/exact"})}),(0,s.jsx)(n.td,{children:"Exact match only"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"/exact"})," \u2705",(0,s.jsx)("br",{}),(0,s.jsx)(n.code,{children:"/exact/sub"})," \u274c"]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"authentication-endpoints",children:"Authentication Endpoints"}),"\n",(0,s.jsxs)(n.p,{children:["When you use ",(0,s.jsx)(n.code,{children:"@EnableJazzyAuth"}),", these endpoints are automatically created:"]}),"\n",(0,s.jsx)(n.h3,{id:"post-apiauthregister",children:"POST /api/auth/register"}),"\n",(0,s.jsx)(n.p,{children:"Register a new user account."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Request:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "email": "user@example.com",\n    "username": "john_doe",\n    "password": "securePassword123",\n    "firstName": "John",\n    "lastName": "Doe"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Response (Success):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "success": true,\n    "message": "User registered successfully",\n    "data": {\n        "user": {\n            "id": 1,\n            "email": "user@example.com",\n            "username": "john_doe",\n            "firstName": "John",\n            "lastName": "Doe",\n            "role": "USER",\n            "active": true\n        },\n        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"post-apiauthlogin",children:"POST /api/auth/login"}),"\n",(0,s.jsx)(n.p,{children:"Authenticate and receive JWT token."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Request (Email Login):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "email": "user@example.com",\n    "password": "securePassword123"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Request (Username Login):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "username": "john_doe", \n    "password": "securePassword123"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Response (Success):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "success": true,\n    "message": "Login successful",\n    "data": {\n        "user": {\n            "id": 1,\n            "email": "user@example.com",\n            "username": "john_doe",\n            "role": "USER"\n        },\n        "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get-apiauthme",children:"GET /api/auth/me"}),"\n",(0,s.jsx)(n.p,{children:"Get current user information using JWT token."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Request Headers:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Response:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "success": true,\n    "data": {\n        "user": {\n            "id": 1,\n            "email": "user@example.com",\n            "username": "john_doe",\n            "firstName": "John",\n            "lastName": "Doe",\n            "role": "USER",\n            "active": true\n        }\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"jwt-token-usage",children:"JWT Token Usage"}),"\n",(0,s.jsx)(n.h3,{id:"client-side-usage",children:"Client-Side Usage"}),"\n",(0,s.jsxs)(n.p,{children:["Include the JWT token in the ",(0,s.jsx)(n.code,{children:"Authorization"})," header for protected requests:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// JavaScript example\nconst token = localStorage.getItem('authToken');\n\nfetch('/api/protected/data', {\n    headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n    }\n})\n.then(response => response.json())\n.then(data => console.log(data));\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Java client example\nHttpURLConnection connection = (HttpURLConnection) url.openConnection();\nconnection.setRequestProperty("Authorization", "Bearer " + token);\nconnection.setRequestProperty("Content-Type", "application/json");\n'})}),"\n",(0,s.jsx)(n.h3,{id:"token-structure",children:"Token Structure"}),"\n",(0,s.jsx)(n.p,{children:"JWT tokens contain the following claims:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "sub": "1",                    // User ID\n    "email": "user@example.com",   // User email\n    "roles": ["USER"],             // User roles\n    "iat": 1640995200,             // Issued at timestamp\n    "exp": 1641081600              // Expiration timestamp\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"role-based-access-control",children:"Role-Based Access Control"}),"\n",(0,s.jsx)(n.h3,{id:"built-in-roles",children:"Built-in Roles"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Role"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Usage"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"USER"})}),(0,s.jsx)(n.td,{children:"Standard user"}),(0,s.jsx)(n.td,{children:"Default role for registered users"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ADMIN"})}),(0,s.jsx)(n.td,{children:"Administrator"}),(0,s.jsx)(n.td,{children:"Can access admin endpoints"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"custom-roles",children:"Custom Roles"}),"\n",(0,s.jsx)(n.p,{children:"You can extend the role system by using custom role values:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// In your User entity\nprivate String role = "MODERATOR"; // Custom role\n\n// In SecurityConfig\n@Override\npublic void configure() {\n    requireRole("ADMIN", "/api/admin/**");\n    requireRole("MODERATOR", "/api/moderate/**");\n    // Note: Currently only ADMIN role is fully supported\n    // Custom roles are stored but not enforced by SecurityInterceptor\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"custom-jwt-configuration",children:"Custom JWT Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@EnableJazzyAuth(\n    userClass = User.class,\n    repositoryClass = UserRepository.class,\n    loginMethod = LoginMethod.EMAIL,\n    \n    // JWT Configuration\n    jwtSecret = "your-256-bit-secret-key-here",\n    jwtExpirationHours = 168,        // 7 days\n    \n    // Endpoint Configuration  \n    authBasePath = "/auth",          // Changes to /auth/* instead of /api/auth/*\n)\npublic class MyApp {\n    // ...\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"multiple-login-methods",children:"Multiple Login Methods"}),"\n",(0,s.jsx)(n.p,{children:"Currently, you can choose one login method per application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Email-based login\n@EnableJazzyAuth(\n    loginMethod = LoginMethod.EMAIL,\n    // ... other config\n)\n\n// Username-based login  \n@EnableJazzyAuth(\n    loginMethod = LoginMethod.USERNAME,\n    // ... other config\n)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"password-security",children:"Password Security"}),"\n",(0,s.jsx)(n.p,{children:"Passwords are automatically hashed using BCrypt with a secure salt:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Passwords are never stored in plain text"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 BCrypt with automatic salt generation"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Secure password verification during login"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Protection against rainbow table attacks"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.h3,{id:"authentication-errors",children:"Authentication Errors"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"401 Unauthorized"})," - Missing or invalid JWT token:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "error": "Authentication required"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"403 Forbidden"})," - Valid token but insufficient permissions:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "error": "Admin access required"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"registration-errors",children:"Registration Errors"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"400 Bad Request"})," - Validation errors:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "success": false,\n    "message": "User with email user@example.com already exists"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"login-errors",children:"Login Errors"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"401 Unauthorized"})," - Invalid credentials:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "success": false,\n    "message": "Invalid credentials"\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,s.jsx)(n.h3,{id:"with-auto-crud-system",children:"With Auto-CRUD System"}),"\n",(0,s.jsx)(n.p,{children:"Combine authentication with CRUD for secure APIs:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@EnableJazzyAuth(\n    userClass = User.class,\n    repositoryClass = UserRepository.class,\n    loginMethod = LoginMethod.EMAIL\n)\npublic class SecureApp {\n    public static void main(String[] args) {\n        // Authentication endpoints: /api/auth/*\n        // CRUD endpoints will respect SecurityConfig rules\n        \n        Config config = new Config();\n        Router router = new Router();\n        \n        Server server = new Server(router, config);\n        server.start(8080);\n    }\n}\n\n@Component\n@Crud(\n    entity = Product.class,\n    endpoint = "/api/products",\n    enablePagination = true\n)\npublic class ProductController {\n    // All endpoints automatically protected by SecurityConfig\n    // GET /api/products - public if configured\n    // POST /api/products - secure if configured\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"custom-security-logic",children:"Custom Security Logic"}),"\n",(0,s.jsx)(n.p,{children:"Add custom security logic to your controllers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Component\npublic class UserController {\n    \n    public Response getProfile(Request request) {\n        // Get user from JWT token (automatically validated by SecurityInterceptor)\n        String authHeader = request.header("Authorization");\n        if (authHeader != null && authHeader.startsWith("Bearer ")) {\n            String token = authHeader.substring(7);\n            \n            // Extract user info from token (optional, for additional checks)\n            JwtUtil jwtUtil = // get from DI container\n            JwtClaims claims = jwtUtil.validateToken(token);\n            String userId = claims.getUserId();\n            \n            // Your custom logic here\n            return Response.json(JSON.of("userId", userId));\n        }\n        \n        return Response.json(JSON.of("error", "No token")).status(401);\n    }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Use strong JWT secrets (256+ bits)"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Set appropriate token expiration times"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Use HTTPS in production"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Validate input data properly"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Log authentication attempts"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't store JWT tokens in local storage (use httpOnly cookies)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't use weak passwords"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Don't expose JWT secrets in logs"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Keep SecurityConfig rules simple and clear"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Use specific patterns over broad wildcards when possible"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Group related endpoints under common paths"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Document your security rules"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Test security configurations thoroughly"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"development",children:"Development"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'// Good: Clear and organized\npublicEndpoints("/", "/api/auth/**", "/health");\nrequireAuth("/api/user/**", "/api/data/**");\nrequireRole("ADMIN", "/api/admin/**");\n\n// Avoid: Overlapping or conflicting rules\npublicEndpoints("/api/**");           // Too broad\nrequireAuth("/api/user/**");          // Conflicts with above\n'})}),"\n",(0,s.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,s.jsx)(n.h3,{id:"from-no-authentication-v04-and-earlier",children:"From No Authentication (v0.4 and earlier)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Add User Entity"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Entity\npublic class User {\n    @Id @GeneratedValue\n    private Long id;\n    \n    @Column(unique = true)\n    private String email;\n    \n    private String password;\n    private String role = "USER";\n    \n    // getters/setters\n}\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Add User Repository"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@Component\npublic interface UserRepository extends BaseRepository<User, Long> {\n    Optional<User> findByEmail(String email);\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Add Security Config"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'@Component \npublic class SecurityConfig extends SecurityConfig {\n    @Override\n    public void configure() {\n        publicEndpoints("/", "/api/auth/**");\n        requireAuth("/api/**");\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Enable Authentication"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"@EnableJazzyAuth(\n    userClass = User.class,\n    repositoryClass = UserRepository.class,\n    loginMethod = LoginMethod.EMAIL\n)\npublic class MyApp {\n    // ... rest of your app unchanged\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Your existing endpoints will now be protected according to your SecurityConfig rules!"}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authentication endpoints not found (404)"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 Check ",(0,s.jsx)(n.code,{children:"@EnableJazzyAuth"})," annotation is present"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Verify ",(0,s.jsx)(n.code,{children:"authBasePath"})," configuration"]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Ensure user repository is registered in DI container"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Security rules not working"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 Verify SecurityConfig extends ",(0,s.jsx)(n.code,{children:"SecurityConfig"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Check SecurityConfig is annotated with ",(0,s.jsx)(n.code,{children:"@Component"})]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Ensure ",(0,s.jsx)(n.code,{children:"configure()"})," method is implemented"]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Test endpoint patterns with exact URLs"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"JWT token validation fails"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Check JWT secret configuration"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Verify token format in Authorization header"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Check token expiration time"}),"\n",(0,s.jsx)(n.li,{children:'\u2705 Ensure token includes "Bearer " prefix'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Registration/login fails silently"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Check database configuration"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Verify user entity field mappings"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Check repository method signatures"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Enable SQL logging to see database queries"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,s.jsx)(n.p,{children:"Enable debug logging:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"// Add to application.properties\nlogging.level.jazzyframework.security=DEBUG\n"})}),"\n",(0,s.jsx)(n.p,{children:"Test authentication manually:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Register user\ncurl -X POST http://localhost:8080/api/auth/register \\\n  -H "Content-Type: application/json" \\\n  -d \'{"email":"test@example.com","password":"test123"}\'\n\n# Login\ncurl -X POST http://localhost:8080/api/auth/login \\\n  -H "Content-Type: application/json" \\\n  -d \'{"email":"test@example.com","password":"test123"}\'\n\n# Access protected endpoint\ncurl http://localhost:8080/api/protected \\\n  -H "Authorization: Bearer YOUR_JWT_TOKEN"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);